spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}

spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://192.168.99.100:5434/testrestanddb?currentSchema=public}
spring.datasource.username=${POSTGRES_USERNAME:test_user1}
spring.datasource.password=${POSTGRES_PASSWORD:test_password}

server.port=${REST_DATAMODULE_PORT:8086}

spring.datasource.type=${DATASOURCE_TYPE:org.apache.commons.dbcp2.BasicDataSource}
spring.datasource.dbcp2.initial-size=${DBCP2_INITIAL_SIZE:5}
spring.datasource.dbcp2.max-total=${DBCP2_MAX_TOTAL:20}
spring.datasource.dbcp2.max-idle=${DBCP2_MAX_IDLE:10}
spring.datasource.dbcp2.min-idle=${DBCP2_MIN_IDLE:5}
spring.datasource.dbcp2.max-wait-millis=${DBCP2_MAX_WAIT:10000}
spring.datasource.dbcp2.test-on-borrow=${DBCP2_BORROW:true}
spring.datasource.dbcp2.validation-query=${DBCP2_VALIDATION_QUERY:SELECT 1}

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:consumer}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET:earliest}

spring.kafka.bootstrap-servers=${KAFKA_SERVERS:192.168.99.100:9092}
kafka.topic=${KAFKA_TOPIC:user-requests}

spring.data.redis.host=${REDIS_HOST:192.168.99.100}
spring.data.redis.port=${REDIS_PORT:6379}

